After supplying the password, Ansible decrypts the vault in memory and runs the playbook with the decrypted data.
You can edit the encrypted file with ansible vault edit. You can also rekey a file change its password, create a new file, view an existing file, or decrypt a file. All these commands work with one or multiple file e.g. ansible vault create x.yml y.yml z.yml.
For convenience, or for automated playbook runs e.g. on the continuous integration server, you can supply vault passwords via a password file. Just like secure keys in your .ssh folder, you should treat these files carefully never check them into source control, and set strict permissions e.g. so only you can read or write this file. Create the file ansible vault pass .txt with your password in it, set permissions to, tell Ansible the location of the file when you run the playbook
You could also use an executable script ansible vault pass.py with execute permissions, as long as the script outputs a single line of text, the vault password.
You can make Ansible's Vault operations sligthly faster by installing Pytons cryptography library, with pip install cryptography.
Are you worried about the security of Vault encrypted files AES encryption is extremely secure it would take billions of billions of years to decrypt this single file even if all of todays faster as its password, so make sure you use a secure password and store it securely
